rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow access to authenticated users
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && 
                     request.auth.uid == userId &&
                     (
                       // Allow updating profile fields including photoURL
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['photoURL', 'phoneNumber', 'address', 'name', 'lastUpdated']) ||
                       // Allow admins to update any field
                       resource.data.role == 'admin'
                     );
      allow delete: if false;
    }

    // Vendors collection - full access for authenticated users
    match /vendors/{vendorId} {
      // Allow all operations for any authenticated user
      allow read, write, create, update, delete: if request.auth != null;
      
      // Allow access to all subcollections under vendors
      match /{document=**} {
        allow read, write, delete: if request.auth != null;
      }
    }

    // Programs collection
    match /programs/{programId} {
      allow read, write, create, update, delete: if request.auth != null;
      
      match /{document=**} {
        allow read, write, delete: if request.auth != null;
      }
    }

    // Beneficiaries collection
    match /beneficiaries/{beneficiaryId} {
      allow read, write, create, update, delete: if request.auth != null;
      
      match /{document=**} {
        allow read, write, delete: if request.auth != null;
      }
    }

    // Participants collection
    match /participants/{participantId} {
      allow read, write: if request.auth != null;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}