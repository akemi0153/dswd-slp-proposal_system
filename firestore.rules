rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             (request.auth.token.role == 'admin' ||
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    function hasPermission(permission) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return isAuthenticated() && 
             (user.data.permissions[permission] == true || isAdmin());
    }

    // Users collection
    match /users/{userId} {
      // Allow listing users for authenticated users
      allow list: if isAuthenticated();
      // Allow reading own profile
      allow get: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      // Allow creating own profile or if admin
      allow create: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      // Allow updating own profile or if admin
      allow update: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin()
      );
      // Only admin can delete users
      allow delete: if isAdmin();
    }

    // Participants collection - optimized for large datasets
    match /participants/{participantId} {
      // Allow read access without pagination limit
      allow list: if isAuthenticated();
      
      // Allow individual document reads
      allow get: if isAuthenticated();
      
      // Allow writes only for authenticated users
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
      
      // Optimize subcollection access
      match /{document=**} {
        allow read, write: if isAuthenticated();
      }
    }

    // Family details collection - optimized for large datasets
    match /familydetails/{familyId} {
      // Allow read access without pagination limit
      allow list: if isAuthenticated();
      
      // Allow individual document reads
      allow get: if isAuthenticated();
      
      // Allow writes only for authenticated users
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
      
      // Optimize subcollection access
      match /{document=**} {
        allow read, write: if isAuthenticated();
      }
    }

    // Vendors collection
    match /vendors/{vendorId} {
      allow read, write: if isAuthenticated();
      match /{document=**} {
        allow read, write: if isAuthenticated();
      }
    }

    // Programs collection
    match /programs/{programId} {
      allow read, write: if true;
      
      // Allow access to nested collections/documents
      match /{document=**} {
        allow read, write: if true;
      }
    }

    // Beneficiaries collection
    match /beneficiaries/{beneficiaryId} {
      allow read, write: if isAuthenticated();
      match /{document=**} {
        allow read, write: if isAuthenticated();
      }
    }

    // Files collection for storing file metadata and chunks
    match /files/{fileId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                   request.resource.data.size < 10485760 && // 10MB limit
                   request.resource.data.uploaderId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   request.auth.uid == resource.data.uploaderId;
      allow delete: if isAuthenticated() && 
                   request.auth.uid == resource.data.uploaderId;

      // Allow access to chunks subcollection
      match /chunks/{chunkId} {
        allow read: if isAuthenticated() &&
                   get(/databases/$(database)/documents/files/$(fileId)).data.uploaderId == request.auth.uid;
        allow create: if isAuthenticated() &&
                     get(/databases/$(database)/documents/files/$(fileId)).data.uploaderId == request.auth.uid;
        allow delete: if isAuthenticated() &&
                     get(/databases/$(database)/documents/files/$(fileId)).data.uploaderId == request.auth.uid;
      }
    }

    // Roles collection
    match /roles/{roleId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Activities collection
    match /activities/{activityId} {
      // Allow reading activities for all users
      allow read: if true;
      
      // Allow creating activities if authenticated and data is valid
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.images is list &&
                   request.resource.data.images.size() <= 5;
      
      // Allow updating only your own activities
      allow update: if isAuthenticated() &&
                   resource.data.userId == request.auth.uid &&
                   request.resource.data.userId == request.auth.uid;
      
      // Allow deleting only your own activities or if admin
      allow delete: if isAuthenticated() &&
                   (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Other collections should check for specific permissions
    match /{collection}/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}